name: Generate and Update Code Quality Report

on:
  push:
    paths:
      - '**/*.js'
  pull_request:
    paths:
      - '**/*.js'
  workflow_dispatch:

jobs:
  lint:
    name: Run ESLint and Update HTML Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          # Install ESLint and eslint-formatter-html as development dependencies
          npm install eslint eslint-formatter-html --save-dev

      - name: Create ESLint Config File
        run: |
          # Create the eslint.config.js file with custom content
          echo 'module.exports = [
            {
              files: ["**/*.js"], 
              ignores: ["coverage/"],
              rules: {
                "no-unused-vars": "warn",
                "no-console": "off"
              }
            }
          ];' > eslint.config.js

      - name: Run ESLint and Generate HTML Report
        run: |
          # Run ESLint using the "lint" script and output to an HTML file
          npm run lint -- --config eslint.config.js --format html --output-file eslint-report.html || {
            echo "ESLint failed. Printing debug info...";
            exit 1;
          }

      - name: Replace User Folder with New Report
        run: |
          # Get the GitHub username from the current context
          USERNAME=$(echo $GITHUB_ACTOR)
          
          # Define the path for the user's folder in the docs directory
          USER_FOLDER="docs/$USERNAME"
          
          # If the user's folder already exists, delete it
          if [ -d "$USER_FOLDER" ]; then
            echo "Removing existing folder for $USERNAME"
            rm -rf "$USER_FOLDER"
          fi

          # Create a new directory for the user under docs/
          mkdir -p "$USER_FOLDER"
          
          # Move the newly generated ESLint report to the user's folder
          mv eslint-report.html "$USER_FOLDER/"

      - name: Commit and Push Updated Report to GitHub Pages
        run: |
          # Add and commit the updated report to the repository
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add docs/$USERNAME/eslint-report.html
          git commit -m "Update ESLint report for $USERNAME"
          
          # Push the changes to the repository
          git push origin main --force
